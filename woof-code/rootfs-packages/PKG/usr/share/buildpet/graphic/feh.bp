#!/bin/sh

PKG_NAME="feh"
PKG_VER="2.1"
PKG_REV="1"
PKG_DESC="Image viewer"
PKG_CAT="Graphic"
PKG_DEPS="+giblib,+yad"

download() {
	# download the sources
	[ -f $PKG_NAME-$PKG_VER.tar.bz2 ] && return 0
	wget --no-check-certificate http://feh.finalrewind.org/$PKG_NAME-$PKG_VER.tar.bz2
	[ $? -ne 0 ] && return 1
	return 0
}

build() {
	# extract the sources
	tar -xjvf $PKG_NAME-$PKG_VER.tar.bz2
	[ $? -ne 0 ] && return 1

	cd $PKG_NAME-$PKG_VER

	# build the package
	make -j $BUILD_THREADS debug=0 curl=1 help=0 xinerama=1
	[ $? -ne 0 ] && return 1

	return 0
}

package() {	
	# install the package
	make DESTDIR=$INSTALL_DIR install
	[ $? -ne 0 ] && return 1

	# install the license
	install -m644 -D ./COPYING $INSTALL_DIR${BASE_PATH_PREFIX}/share/doc/legal/feh/COPYING
	[ $? -ne 0 ] && return 1

	# add a wrapper
	echo '#!/bin/sh
	
choice="$(yad --title Choose\ a\ file --width 500 --height 300 --file)"             
[ $? -eq 1 ] && exit 0                                                                 
exec feh "$choice"' > $INSTALL_DIR${BASE_PATH_PREFIX}/bin/feh_shell
	[ $? -ne 0 ] && return 1
	chmod 755 $INSTALL_DIR${BASE_PATH_PREFIX}/bin/feh_shell
	[ $? -ne 0 ] && return 1
	
	# add a menu entry
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}/share/applications
	[ $? -ne 0 ] && return 1
	echo '[Desktop Entry]
Encoding=UTF-8
Name=Feh image viewer
Icon=mini-palette.xpm
Comment=Feh image viewer
Exec=feh_shell
Terminal=false
Type=Application
Categories=Graphics;2DGraphics;RasterGraphics;
GenericName=Feh image viewer' > $INSTALL_DIR${BASE_PATH_PREFIX}/share/applications/feh.desktop
	[ $? -ne 0 ] && return 1
	chmod 644 $INSTALL_DIR${BASE_PATH_PREFIX}/share/applications/feh.desktop
	[ $? -ne 0 ] && return 1

	# add the post-install script
	echo '#!/bin/sh

echo "Setting Feh as the default image viewer"

echo "#!/bin/sh
exec feh \"\$@\"" > .${BASE_PATH_PREFIX}/local/bin/defaultimageviewer

chmod 755 .${BASE_PATH_PREFIX}/local/bin/defaultimageviewer' > $INSTALL_DIR/pinstall.sh
	[ $? -ne 0 ] && return 1
	chmod 755 $INSTALL_DIR/pinstall.sh
	[ $? -ne 0 ] && return 1

	return 0
}
