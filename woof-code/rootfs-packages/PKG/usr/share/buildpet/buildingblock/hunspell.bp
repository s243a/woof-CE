#!/bin/sh

PKG_NAME="hunspell"
PKG_VER="1.3.2"
PKG_REV="1"
PKG_DESC="Spell-checking library"
PKG_CAT="BuildingBlock"
PKG_DEPS=""

# the dictionary version
DICT_VER="7.1-0"

download() {
	# download the sources
	if [ ! -f $PKG_NAME-$PKG_VER.tar.gz ]
	then
		wget --no-check-certificate http://downloads.sourceforge.net/hunspell/$PKG_NAME-$PKG_VER.tar.gz
		[ $? -ne 0 ] && return 1
	fi
	
	# download the dictionary
	if [ ! -f hunspell-en_US-$DICT_VER.zip ]
	then
		wget --no-check-certificate http://downloads.sourceforge.net/wordlist/hunspell-en_US-$DICT_VER.zip
		[ $? -ne 0 ] && return 1
	fi
	
	return 0
}

build() {
	# extract the sources
	tar -xzvf $PKG_NAME-$PKG_VER.tar.gz
	[ $? -ne 0 ] && return 1
	
	# extract the dictionary
	unzip hunspell-en_US-$DICT_VER.zip
	[ $? -ne 0 ] && return 1
	
	cd $PKG_NAME-$PKG_VER

	# configure the package
	./configure $BASE_CONFIGURE_ARGS \
	            --prefix=${BASE_PATH_PREFIX} \
	            --without-ui \
	            --without-readline
	[ $? -ne 0 ] && return 1

	# build the package
	make -j $BUILD_THREADS
	[ $? -ne 0 ] && return 1

	return 0
}

package() {	
	# install the package
	make DESTDIR=$INSTALL_DIR install
	[ $? -ne 0 ] && return 1

	# create the dictionaries directory
	mkdir $INSTALL_DIR${BASE_PATH_PREFIX}/share/hunspell
	[ $? -ne 0 ] && return 1
	
	# install the dictionary
	for i in dic aff
	do
		mv ../en_US.$i $INSTALL_DIR${BASE_PATH_PREFIX}/share/hunspell
		[ $? -ne 0 ] && return 1
		chmod 644 $INSTALL_DIR${BASE_PATH_PREFIX}/share/hunspell/en_US.$i
		[ $? -ne 0 ] && return 1
	done
	
	# install the dictionary license
	install -m644 -D README_en_US.txt $INSTALL_DIR${BASE_PATH_PREFIX}/share/doc/legal/hunspell/README_en_US.txt
	[ $? -ne 0 ] && return 1
	
	# create backwards-compatility symlinks
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}/share/myspell/dicts
	[ $? -ne 0 ] && return 1
	
	for i in $INSTALL_DIR${BASE_PATH_PREFIX}/share/hunspell/*
	do
		ln -s ../../hunspell/$(basename $i) $INSTALL_DIR${BASE_PATH_PREFIX}/share/myspell/dicts
		[ $? -ne 0 ] && return 1
	done
				
	return 0
}
