#!/bin/sh

PKG_NAME="mongoose"
PKG_VER="3.8"
PKG_REV="1"
PKG_DESC="lightweight web server"
PKG_CAT="Network"
PKG_DEPS=""

download() {
	# download the sources
	[ -f $PKG_NAME-$PKG_VER.tar.gz ] && return 0
	wget --continue --no-check-certificate https://mongoose.googlecode.com/files/$PKG_NAME-$PKG_VER.tgz
	[ $? -ne 0 ] && return 1
	return 0
}

build() {
	# extract the sources
	tar -xzvf $PKG_NAME-$PKG_VER.tgz
	[ $? -ne 0 ] && return 1

	mv $PKG_NAME $PKG_NAME-$PKG_VER
	cd $PKG_NAME-$PKG_VER
	[ $? -ne 0 ] && echo "Can't cd into $PKG_NAME-$PKG_VER" && return 1

	# configure the package
	#./configure $BASE_CONFIGURE_ARGS
	#[ $? -ne 0 ] && return 1

	# build the package
	make -j $BUILD_THREADS linux
	[ $? -ne 0 ] && return 1

	return 0
}

package() {	
	# install the package
	mkdir -p $INSTALL_DIR
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}/bin
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}/share
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}/share/applications
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}/share/icons
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}/share/icons/hicolor
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}/share/icons/hicolor/16x16
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}/share/icons/hicolor/24x24
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}/share/icons/hicolor/32x32
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}/share/icons/hicolor/16x16/apps
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}/share/icons/hicolor/24x24/apps
	mkdir -p $INSTALL_DIR${BASE_PATH_PREFIX}/share/icons/hicolor/32x32/apps
	mv mongoose $INSTALL_DIR${BASE_PATH_PREFIX}/bin
	mv build/mongoose_16x16.png $INSTALL_DIR${BASE_PATH_PREFIX}/share/icons/hicolor/16x16/apps/mongoose.png
	mv build/mongoose_22x22.png $INSTALL_DIR${BASE_PATH_PREFIX}/share/icons/hicolor/24x24/apps/mongoose.png
	mv build/mongoose_32x32.png $INSTALL_DIR${BASE_PATH_PREFIX}/share/icons/hicolor/32x32/apps/mongoose.png
	echo '#!/bin/bash
#190613 updates
STATUS=STOPPED
[ "`ps --no-heading -C mongoose`" != "" ] && export THESTATUS=RUNNING || export THESTATUS=STOPPED
Xdialog --title "Mongoose Webserver" --ok-label="Start Mongoose" --cancel-label "Stop Mongoose" --yesno "Current webserver status: $THESTATUS
What do you want do to with the Mongoose Webserver?
" 0 0

REPLY=$?
if [ "$REPLY" = 0 ];then
	[ "$THESTATUS" = "RUNNING" ] && killall mongoose
	exec mongoose ~/.mongoose/mongoose.conf &
else
	killall mongoose
	killall -9 mongoose
fi
Xdialog --title "Webserver" --msgbox "Run this again to start or stop your webserver." 0 0

#[ "`ps -e | grep mongoos`" != "" ] && killall mongoose && Xdialog --title "Webserver" --msgbox "Webserver stopped.. Run this again to start it." 0 0 && exit 0
#exec mongoose ~/.mongoose/mongoose.conf &
#Xdialog --title "Webserver" --msgbox "Webserver started.. Run this again to stop it." 0 0
exit 0' > $INSTALL_DIR${BASE_PATH_PREFIX}/bin/mongoose.sh
	chmod +x $INSTALL_DIR${BASE_PATH_PREFIX}/bin/mongoose.sh
	#make DESTDIR=$INSTALL_DIR install
	[ $? -ne 0 ] && return 1

	echo "[Desktop Entry]
Categories=Network
Comment=Mongoose webserver
Encoding=UTF-8
Exec=mongoose.sh
GenericName=Mongoose
Icon=mongoose.png
Name=Mongoose - tiny webserver
Terminal=false
Type=Application
" > $INSTALL_DIR${BASE_PATH_PREFIX}/share/applications/mongoose.desktop

	return 0
}
