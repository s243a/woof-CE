#!/bin/sh

PKG_NAME="pekwm"
PKG_VER="0.1.16"
PKG_REV="1"
PKG_DESC="window manager"
PKG_CAT="Desktop"
PKG_DEPS=""

download() {
	# download the sources
	if [ ! -f $PKG_NAME-$PKG_VER.tar.bz2 ]
	then
		wget --no-check-certificate https://www.pekwm.org/projects/$PKG_NAME/files/$PKG_NAME-$PKG_VER.tar.bz2
		[ $? -ne 0 ] && return 1
	fi
	
	return 0
}

build() {
	# extract the sources
	tar -xjvf $PKG_NAME-$PKG_VER.tar.bz2
	[ $? -ne 0 ] && return 1

	cd $PKG_NAME-$PKG_VER

	# configure the package
	./configure $BASE_CONFIGURE_ARGS --enable-xrandr --enable-image-xpm \
	--enable-image-jpeg --enable-image-png --enable-xft --enable-xinerama --enable-shape
	[ $? -ne 0 ] && return 1

	#fix the source, make it build
	sed -i 's/#pragma GCC diagnostic/\/\/#pragma GCC diagnostic/g' src/x11.cc
	
	# build the package
	make -j $BUILD_THREADS
	[ $? -ne 0 ] && return 1

	return 0
}

package() {	
	# install the package
	make DESTDIR=$INSTALL_DIR install
	[ $? -ne 0 ] && return 1
	
	# create proper menus
	echo "#!/bin/ash
# variables
dtfiles=\"${BASE_PATH_PREFIX}/share/applications/*.desktop\"

if [ `ls ${BASE_PATH_PREFIX}/local/share/applications/*.desktop 2>/dev/null` ]
then
	dtfiles=\"\${dtfiles} ${BASE_PATH_PREFIX}/local/share/applications/*.desktop\"
fi

{	#localization block
[ \$myLANG ] || myLANG=\${LANGUAGE%% *}
[ \$myLANG ] || myLANG=\${LANG%_*}
}

# Create the menu
{	#parse .desktop files and sort generated menu entries into subcategories
#for DESKTOP_FILE in ${BASE_PATH_PREFIX}/share/applications/*.desktop ; do
for DESKTOP_FILE in \${dtfiles} ; do
	CATS=\"\" NAME=\"\" EXEC=\"\" LINE=\"\" #prevent carryover from previous file
	while read LINE || [ \"\$LINE\" ]; do
		case \$LINE in
			Name=*|Name?\${myLANG%_*}?=*) NAME=\"\${LINE#*=}\"'' ;; # sc0ttman... should use \"Name[\$myLANG]=\" if found
			#Name=*) NAME=\"\${LINE#*=}\"'' ;; # aragon: only main language
			Categories=*) CATS=\"\${LINE#*=}\"''
			CAT=\"\${CATS/;*/}\"'' ;; #strip all but first cat
			Exec=*) EXEC=\"\${LINE#*=}\"''
			EXEC=\"\${EXEC//\\\"/'}\"'' ;; 
		esac
	done < \$DESKTOP_FILE	

	[ \"\${EXEC}\" ] && MenuEntry='Entry = \"'\${NAME}'\" { Actions = \"Exec '\${EXEC}' &\" }
		'
	case \"\$CAT\" in
		X-Desktop|DesktopSettings|Screensaver|Accessibility|X-DesktopCountry|X-DesktopApplets)Desktop=\${Desktop}\${MenuEntry};;
		System|Monitor|Security|HardwareSettings|Core|X-SystemMemory|X-SystemSchedule)System=\${System}\${MenuEntry};;
		X-SetupEntry|PackageManager|X-SetupWizard|X-SetupUtility)Setup=\${Setup}\${MenuEntry};;
		Utility|Viewer|Development|Building|Debugger|IDE|Profiling|Translation|GUIDesigner|Archiving|TerminalEmulator|Shell)Utility=\${Utility}\${MenuEntry};; #sc0ttman utility typo
		FileSystem|FileManager|X-FilesystemMount|X-FilesystemUtility|X-FilesystemFind)Filesystem=\${Filesystem}\${MenuEntry};;
		2DGraphics|3DGraphics|Photography|Presentation|Chart|FlowChart|VectorGraphics|RasterGraphics|X-GraphicUtility)Graphic=\${Graphic}\${MenuEntry};;
		X-Document|WordProcessor|WebDevelopment|TextEditor|X-DocumentUtility|Dictionary)Document=\${Document}\${MenuEntry};;
		X-Calculate|Finance|Spreadsheet|ProjectManagement|Calculator|X-CalculateUtility)Business=\${Business}\${MenuEntry};;
		X-Personal|Calendar|ContactManagement|X-PersonalUtility)Personal=\${Personal}\${MenuEntry};;
		Dialup|Network|HamRadio|RemoteAccess)Network=\${Network}\${MenuEntry};;
		X-Internet|WebBrowser|Email|News|InstantMessaging|Telephony|IRCClient|FileTransfer|P2P)Internet=\${Internet}\${MenuEntry};;
		AudioVideo|Video|Player|AudioVideoEditing|Recorder|Music|Audio|Midi|Mixer|Sequencer|Tuner|Video|TV|DiskBurning)Multimedia=\${Multimedia}\${MenuEntry};;
		Game|Amusement|ActionGame|AdventureGame|ArcadeGame|BlocksGame|BoardGame|CardGame|KidsGame|LogicGame|RolePlaying|Simulation|SportsGame|StrategyGame)Fun=\${Fun}\${MenuEntry};;
		*)Other=\${Other}\${MenuEntry};;
	esac
done
}

{	#Now generate the full menu with some formatting
MENU='	Submenu = \"Applications\" {

		Submenu = \"Desktop\" {
			'\${Desktop}'
		}
		Submenu = \"System\" {
			'\${System}'
		}
		Submenu = \"Setup\" {
			'\${Setup}'
		}
		Submenu = \"Utility\" {
			'\${Utility}'
		}
		Submenu = \"Filesystem\" {
			'\${Filesystem}'
		}
		Submenu = \"Graphic\" {
			'\${Graphic}'
		}
		Submenu = \"Document\" {
			'\${Document}'
		}
		Submenu = \"Business\" {
			'\${Business}'
		}
		Submenu = \"Personal\" {
			'\${Personal}'
		}
		Submenu = \"Network\" {
			'\${Network}'
		}
		Submenu = \"Internet\" {
			'\${Internet}'
		}
		Submenu = \"Multimedia\" {
			'\${Multimedia}'
		}
		Submenu = \"Fun\" {
			'\${Fun}'
		}
		Submenu = \"Other\" {
			'\${Other}'
		}
	}'
mkdir -p \$HOME/.pekwm/
echo \"# Menu config for pekwm

# Variables
INCLUDE = \\\"vars\\\"

RootMenu = \\\"Pekwm\\\" {
	Entry = \\\"Terminal\\\" { Actions = \\\"Exec \\\$TERM &\\\" }
	Entry = \\\"Run..\\\" { Actions = \\\"ShowCmdDialog\\\" }

	Separator {}
	\" > \$HOME/.pekwm/menu
	
echo \"\$MENU\" >> /root/.pekwm/menu

echo \"
	Separator {}

	Submenu = \\\"Go to\\\" {
		SubMenu = \\\"Workspace\\\" {
			# Create goto menu once per pekwm config reload. The fast way that
			# will work for most if not all users.
			COMMAND = \\\"\\\$_PEKWM_SCRIPT_PATH/pekwm_ws_menu.sh goto\\\"
			# Create goto menu every time the menu is opened. The slow way.
			# This is what you want if you are using external tools to make
			# the amount of workspaces something else than what you define in
			# ~/.pekwm/config. You will know if you want this.
			# Entry = \\\"\\\" { Actions = \\\"Dynamic \\\$_PEKWM_SCRIPT_PATH/pekwm_ws_menu.sh goto dynamic\\\" }
		}
		Entry = \\\"Window..\\\" { Actions = \\\"ShowMenu GotoClient True\\\" }
	}
	Submenu = \\\"Pekwm\\\" {
		Submenu = \\\"Themes\\\" {
			Entry { Actions = \\\"Dynamic \\\$_PEKWM_SCRIPT_PATH/pekwm_themeset.sh \\\$_PEKWM_THEME_PATH\\\" }
			Entry { Actions = \\\"Dynamic \\\$_PEKWM_SCRIPT_PATH/pekwm_themeset.sh ~/.pekwm/themes\\\" }
		}
		Entry = \\\"Reload\\\" { Actions = \\\"Reload\\\" }
		Entry = \\\"Restart\\\" { Actions = \\\"Restart\\\" }
		Entry = \\\"Exit\\\" { Actions = \\\"Exit\\\" }
		Submenu = \\\"Exit to\\\" {
			Entry = \\\"Xterm\\\" { Actions = \\\"RestartOther xterm\\\" }
			Entry = \\\"TWM\\\" { Actions = \\\"RestartOther twm\\\" }
		}
	}
}

WindowMenu = \\\"Window Menu\\\" {
	Entry = \\\"(Un)Stick\\\" { Actions = \\\"Toggle Sticky\\\" }
	Entry = \\\"(Un)Shade\\\" { Actions = \\\"Toggle Shaded\\\" }
	Entry = \\\"Iconify\\\" { Actions = \\\"Set Iconified\\\" }
	Entry = \\\"Command..\\\" { Actions = \\\"ShowCmdDialog\\\" }

	Submenu = \\\"Maximize\\\" {
		Entry = \\\"Toggle Full\\\" { Actions = \\\"Toggle Maximized True True\\\" }
		Entry = \\\"Toggle Horizontal\\\" { Actions = \\\"Toggle Maximized True False\\\" }
		Entry = \\\"Toggle Vertical\\\" { Actions = \\\"Toggle Maximized False True\\\" }
	}
	Submenu = \\\"Fill\\\" {
		Entry = \\\"Full\\\" { Actions = \\\"MaxFill True True\\\" }
		Entry = \\\"Horizontal\\\" { Actions = \\\"MaxFill True False\\\" }
		Entry = \\\"Vertical\\\" { Actions = \\\"MaxFill False True\\\" }
	}
	Submenu = \\\"Stacking\\\" {
		Entry = \\\"Raise\\\" { Actions = \\\"Raise\\\" }
		Entry = \\\"Lower\\\" { Actions = \\\"Lower\\\" }
		Entry = \\\"Toggle Always On Top\\\" { Actions = \\\"Toggle AlwaysOnTop\\\" }
		Entry = \\\"Toggle Always Below\\\" { Actions = \\\"Toggle AlwaysBelow\\\" }
	}
	Submenu = \\\"Decorations\\\" {
		Entry = \\\"Toggle Decorations\\\" { Actions = \\\"Toggle DecorBorder; Toggle DecorTitlebar\\\" }
		Entry = \\\"Toggle Borders\\\" { Actions = \\\"Toggle DecorBorder\\\" }
		Entry = \\\"Toggle Titlebar\\\" { Actions = \\\"Toggle DecorTitlebar\\\" }
	}
	Submenu = \\\"Skip\\\" {
		Entry = \\\"Toggle showing this frame in menus\\\" { Actions = \\\"Toggle Skip Menus\\\" }
		Entry = \\\"Toggle including this frame in focus toggle\\\" { Actions = \\\"Toggle Skip FocusToggle\\\" }
		Entry = \\\"Toggle if this frame snaps to other windows\\\" { Actions = \\\"Toggle Skip Snap\\\" }
	}
	SubMenu = \\\"Send To\\\" {
		# Create sendto menu once per pekwm config reload. The fast way that
		# will work for most if not all users.
		COMMAND = \\\"\\\$_PEKWM_SCRIPT_PATH/pekwm_ws_menu.sh send\\\"
		# Create sendto menu every time the menu is opened. The slow way.
		# This is what you want if you are using external tools to make
		# the amount of workspaces something else than what you define in
		# ~/.pekwm/config. You will know if you want this.
		# Entry = \\\"\\\" { Actions = \\\"Dynamic \\\$_PEKWM_SCRIPT_PATH/pekwm_ws_menu.sh send dynamic\\\" }
	}
	Separator {}
	Entry = \\\"Close\\\" { Actions = \\\"Close\\\" }
	Submenu = \\\"Kill\\\" { Entry = \\\"Kill application\\\" { Actions = \\\"Kill\\\" } }
}\" >> /root/.pekwm/menu

}
exit 0" > $INSTALL_DIR${BASE_PATH_PREFIX}/local/bin/spm2pwm
	chmod +x $INSTALL_DIR${BASE_PATH_PREFIX}/local/bin/spm2pwm
	[ $? -ne 0 ] && return 1	
	
	#create pinstall file
	echo "#!/bin/sh
echo 'pekwm' > etc/windowmanager
exec usr/local/bin/spm2pwm &

TEXT=\"PekWM Desktop Environment Installer

PekWM Homepage: https://www.pekwm.org/

IMPORTANT: You must run the command 'spm2pwm' in the terminal to refresh the menu.

Pekwm's conf files are in the ~/.pekwm directory. There are 7 files: config, menu, 
keys, mouse, autoproperties, start, and vars.

Also look in /etc/pekwm

PekWM is a minimal window manager. You may need to load a taskbar etc separately. 
More Info: - https://www.pekwm.org/projects/3/wikis/Companions

PekWM Themes:
- http://adrinux.wordpress.com/pekwm-themes/, http://customize.org/browse/tags/pekwm
- http://www.box-look.org/index.php?xcontentmode=7403

PekWM will start next time you restart the X server (see below)...

1. Go to 'Menu>Shutdown>Restart X' and PekWM will load.

2. If that fails, go to 'Menu>Shutdown>Exit to Prompt', then type 'xwin pekwm' and hit ENTER.
   
NOTE: To read this later, see ${HOME}/pekwm-tips.txt 
\"
Xdialog --title \"Akita PekWM Desktop Environment Installer\" --msgbox \"\$TEXT\" 0 0 
echo \"\$TEXT\" > ~/pekwm-tips.txt" > $INSTALL_DIR/pinstall.sh
	chmod +x $INSTALL_DIR/pinstall.sh
	[ $? -ne 0 ] && return 1

	return 0
}
