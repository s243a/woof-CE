#!/bin/sh
#LGPL Barry Kauler 2006,2007 www.puppylinux.com
#v555 pup files renamed to woofr555.sfs, woofsave.2fs.
#w001 /etc/networkmodules generated (previously done in createpuppy, Unleashed).
#w003 run gtk-update-icon-cache on hicolor icons.
#w003 run icon_switcher_cli for default desktop icon set JQ8flat.
#w007 if sfs layer with extra modules added or removed, need to run depmod.
#w012 updated for new standardised pkg database format.
#w020 april2009: fix for add/remove zdrv (modules) sfs.
#w464 tidyup, make sure /etc/puppyversion is history.
#w474 updatenetmoduleslist.sh called when zdrv loaded or unloaded.
#w477 /etc/desktop_icon_theme has default desktop icon set.
#v423 fix for PUPMODE=2, full hd installation.
#100425 generate woof-tree-official.png from svg.
#100913 new puppy filenames.
#101020 no longer using modprobe.conf.
#101228 01micko: bug fix.
#110119 giving this script an overhaul.
#110122 make sure all woof scripts are updated.
#110204 LANG in /etc/profile got overwritten.
#110422 DISTRO_VERSION variable now has dotted format. note, also now using full dotted version# in puppy filenames.
#110622 mageia1 note, pixbuf cache.
#110722 updated lists of woof scripts that must be updated.
#110722 get rid of stray modules.* files, may occur when mix usage of the two depmods.
#110826 do not call icon_switcher_cli at all.
#111009 try fix upgrading old wary save-file.
#111027 maybe need to fix permissions on /tmp and /var.
#111123 first-boot fix if did cross-build in Woof.
#120209 append LANG when call fixmenus. also run fixdesk, fixscripts
#120225 fix non-english PuppyPin when layers change.
#120323 shinobar: need some more operations when aufs layers change.
#120505 PUPMODE==2, need to consider situation of a full-hd install that is not pre-setup.
#120522 ubuntu precise puppy must have the schemas compiled (otherwise seamonkey crashed) (normally done in 3builddistro).
#120523 precise puppy, may also need to run gio-querymodules. (refer also installpkg.sh, 3builddistro)
#120605 shinobar: need to run gtk-query-immodules-2.0 at first start.
#130203 change probedisk2 to probedisk.
#130217 depmod_func() created, to ensure deletion of modules.* files.
#130418 support kmod (see also rc.sysinit, 3builddistro).

#This script is called by /etc/rc.d/rc.sysinit. the purpose is to perform
#any required updates to files when a new version of Puppy is booted.

#this script can also be called by /usr/sbin/puppyinstaller, when doing a full install
#(option2) to hard drive. in that case, chroot to hd partition, and the ${DISTRO_PUPPYSFS}
#source files are mounted on /srcmntpt in the hd partition.
#puppyinstaller will call here with PUPMODE="option2hdinstall"

PUPMODE="$1"
KERNVER="`uname -r`"

HLESS="$(tr ' ' '\n' < /proc/cmdline | grep '^pfix=' | cut -d= -f2 | grep "headless")"


[ -z $DISPLAY ] || XSTATUS="yes" #v3.99

[ "$PUPMODE" = "" ] && exit

GDK_CACHE=0
GCONV_CACHE=0
GIO_CACHE=0
PANGO_CACHE=0
GTKIM_CACHE=0
GTK_ICONS=0
GLIB_SCHEMAS=0
FONTS=0
MIMES=0

count_cache(){

if [ ! -d /var/filecount ]; then
 mkdir -p /var/filecount
 echo 0 > /var/filecount/gdk_cache
 echo 0 > /var/filecount/gconv_cache
 echo 0 > /var/filecount/gio_cache
 echo 0 > /var/filecount/pango_cache
 echo 0 > /var/filecount/gtkim_cache
 echo 0 > /var/filecount/gtk_icons
 echo 0 > /var/filecount/glib_schemas
 echo 0 > /var/filecount/font_count
 echo 0 > /var/filecount/mime_count
else
 for fl in gdk_cache gconv_cache gio_cache pango_cache gtkim_cache gtk_icons glib_schemas font_count mime_count
 do
  if [ ! -f /var/filecount/$fl ] || [ "$(cat /var/filecount/$fl)" == "" ]; then
   echo 0 > /var/filecount/$fl
  fi
 done
fi

KERNARCH="`uname -m`"

case $KERNARCH in
i?86)
 xLIBPATH="/lib:/usr/lib:/usr/lib32:/usr/lib/i386-linux-gnu:/usr/$KERNARCH-slackware-linux:/usr/lib/$KERNARCH-slackware-linux"
;;
x86_64)
 xLIBPATH="/lib64:/usr/lib64:/usr/lib/x86_64-linux-gnu:/usr/x86_64-slackware-linux:/usr/lib/x86_64-slackware-linux"
;;
esac

for xLIB in $(echo "$xLIBPATH" | tr ':' ' ')
do
	if [ -d $xLIB/gdk-pixbuf-2.0 ]; then
	 xGDK=$(find $xLIB/gdk-pixbuf-2.0 -type f -name "*.so" | grep "/loaders" | wc -l)
	 GDK_CACHE=$(expr $GDK_CACHE + $xGDK)
	fi
	
	if [ -d $xLIB/gconv ]; then
	 xGCONV=$(find $xLIB/gconv -type f -name "*.so" | wc -l)
	 GCONV_CACHE=$(expr $GCONV_CACHE + $xGCONV)
	fi
	
	if [ -d $xLIB/gio ]; then
	 xGIO=$(find $xLIB/gio -type f -name "*.so" | grep "/modules" | wc -l)
	 GIO_CACHE=$(expr $GIO_CACHE + $xGIO)
	fi
	
	if [ -d $xLIB/pango ]; then
	 xPANGO=$(find $xLIB/pango -type f -name "*.so" | grep "/modules" | wc -l)
	 PANGO_CACHE=$(expr $PANGO_CACHE + $xPANGO)
	fi
	
	if [ -d $xLIB/gtk-2.0 ]; then
	 xGTKIM=$(find $xLIB/gtk-2.0 -type f -name "*.so" | grep "/immodules" | wc -l)
	 GTKIM_CACHE=$(expr $GTKIM_CACHE + $xGTKIM)
	fi

done

FONTS=$(find /usr/share/fonts/ -type f -name "*" | grep -v "fonts.scale" | grep -v "fonts.dir" | grep -v ".txt" | wc -l)
GTK_ICONS=$(find /usr/share/icons/hicolor/ -type f -name "*" | grep -v "icon-theme.cache" | wc -l)
GLIB_SCHEMAS=$(find /usr/share/glib-2.0/schemas -type f -name "*.xml" | wc -l)
MIMES=$(find /usr/share/mime/packages -type f -name "*.xml" | wc -l)

}

update_cache_info(){
	
 [ $GDK_CACHE -ne $(cat /var/filecount/gdk_cache) ] && echo $GDK_CACHE > /var/filecount/gdk_cache
 [ $GCONV_CACHE -ne $(cat /var/filecount/gconv_cache) ] && echo $GCONV_CACHE > /var/filecount/gconv_cache
 [ $GIO_CACHE -ne $(cat /var/filecount/gio_cache) ] && echo $GIO_CACHE > /var/filecount/gio_cache
 [ $PANGO_CACHE -ne $(cat /var/filecount/pango_cache) ] && echo $PANGO_CACHE > /var/filecount/pango_cache
 [ $GTKIM_CACHE -ne $(cat /var/filecount/gtkim_cache) ] && echo $GTKIM_CACHE > /var/filecount/gtkim_cache
 [ $GTK_ICONS -ne $(cat /var/filecount/gtk_icons) ] && echo $GTK_ICONS > /var/filecount/gtk_icons
 [ $GLIB_SCHEMAS -ne $(cat /var/filecount/glib_schemas) ] && echo $GLIB_SCHEMAS > /var/filecount/glib_schemas
 [ $FONTS -ne $(cat /var/filecount/font_count) ] && echo $FONTS > /var/filecount/font_count
 [ $MIMES -ne $(cat /var/filecount/mime_count) ] && echo $MIMES > /var/filecount/mime_count
 
}

depmod_func() { #130217 extracted as a function.
 #then run depmod to overwrite any depmod files on OLD layer...
 if [ "$(which kmod)" != "" ]; then #130418
  echo "Executing depmod, to update module files..."
  depmod #this is a symlink to kmod.
 else
  #110722 get rid of stray modules.* files, may occur when mix usage of the two depmods...
  echo "Getting rid of stray modules.* files, may occur when mix usage of the two depmods..."
  mkdir -p /tmp/rc_update_dump
  mv -f /lib/modules/${KERNVER}/modules.* /tmp/rc_update_dump
  [ -f /tmp/rc_update_dump/modules.builtin ] && mv -f /tmp/rc_update_dump/modules.builtin /lib/modules/${KERNVER}/
  [ -f /tmp/rc_update_dump/modules.order ] && mv -f /tmp/rc_update_dump/modules.order /lib/modules/${KERNVER}/
  rm -f /tmp/rc_update_dump/modules.*
  #depmod can be a symlink to busybox.. or not
  if [ "$(which depmod)" != "" ] ;then
    echo "Executing depmod, to update module files..."
    depmod
  else
    echo "Executing depmod, to update module files..."
    busybox depmod
  fi
 fi
}

cross_build_func(){
  echo "Checking if puppy is cross-build..."
  
  if [ -f /etc/rc.d/WOOFMERGEVARS ];then #111123 inserted by 3builddistro.
 
    . /etc/rc.d/WOOFMERGEVARS

   if [ "$WOOF_HOSTARCH" != "$WOOF_TARGETARCH" ];then #woof did a cross-build
    echo "Puppy is cross-build"
    echo "Performing cross-build-fix..."
    echo -n " cross-build-fix" >/dev/console
    #these are normally done in 3builddistro.
    
    echo "Running ldconfig...."
    ldconfig #ldconfig put in by 3builddistro. rebuild /etc/ld.so.cache
    
    echo "Regenerate index...."
    /usr/sbin/indexgen.sh #create master help index.
    
    echo "Fixing menu entries...."
    /usr/sbin/fixmenus #Reconstruct configuration files for JWM, Fvwm95, IceWM. 120323 note: fixmenus corrects $LANG.
    
    if [ $FONTS -ne $(cat /var/filecount/font_count) ]; then
     echo "Rebuilding fontconfig cache..."
     /usr/bin/fc-cache -s -v #fontconfig cache
    fi
    
    ARCH=`uname -m`
    
    echo "Processing gconv and gio modules..."
    case $ARCH in
     i?86)
     
     if [ $GCONV_CACHE -ne $(cat /var/filecount/gconv_cache) ]; then
      [ -f /usr/lib/gconv/gconv-modules.cache ] || /usr/sbin/iconvconfig 
     fi
     
     #120523 this too...
     if [ $GIO_CACHE -ne $(cat /var/filecount/gio_cache) ]; then
      [ -d /usr/lib/gio/modules ] && [ -e /usr/bin/gio-querymodules ] && /usr/bin/gio-querymodules /usr/lib/gio/modules
     fi
     
     ;;
     
     x86_64)
     
     if [ $GCONV_CACHE -ne $(cat /var/filecount/gconv_cache) ]; then
      [ -f /usr/lib64/gconv/gconv-modules.cache ] || /usr/sbin/iconvconfig
     fi
     
     if [ $GIO_CACHE -ne $(cat /var/filecount/gio_cache) ]; then
      [ -d /usr/lib64/gio/modules ] && [ -e /usr/bin/gio-querymodules ] && /usr/bin/gio-querymodules /usr/lib64/gio/modules
     fi
     
     ;;
    
    esac
    
    echo "Searching for pango modules list..."
	
	PANGOMODULES="`find /etc/pango -type f -name pango.modules`"
	
    [ "$PANGOMODULES" = "" ] && PANGOMODULES='/etc/pango/pango.modules'
    
    if [ ! -s ${PANGOMODULES} ]; then
     echo "No module list found. Rebuilding pango modules list..."
     pango-querymodules > ${PANGOMODULES}
    elif [ $(echo "$PANGOMODULES" | wc -l) -gt 1 ]; then
      for pgo in $PANGOMODULES
      do
       pango-querymodules > $pgo
      done
    fi
    
    #120522 ubuntu precise puppy must have the schemas compiled (otherwise seamonkey crashed)...
    
    if [ $GLIB_SCHEMAS -ne $(cat /var/filecount/glib_schemas) ]; then
     echo "Recompiling glib schemas..."
     [ -d /usr/share/glib-2.0/schemas ] && [ -e /usr/bin/glib-compile-schemas ] && /usr/bin/glib-compile-schemas /usr/share/glib-2.0/schemas
     #120523 this too...
    fi
    
     if [ $GIO_CACHE -ne $(cat /var/filecount/gio_cache) ]; then
      [ -d /usr/lib/gio/modules ] && [ -e /usr/bin/gio-querymodules ] && /usr/bin/gio-querymodules /usr/lib/gio/modules
      [ -d /usr/lib64/gio/modules ] && [ -e /usr/bin/gio-querymodules ] && /usr/bin/gio-querymodules /usr/lib64/gio/modules
     fi
    
     if [ $GTKIM_CACHE -ne $(cat /var/filecount/gtkim_cache) ]; then
      #120605 note, /usr/lib/gtk-2.0/2.10.0/gtk.immodules is a symlink to this...
      gtk-query-immodules-2.0 > /etc/gtk-2.0/gtk.immodules #120605 shinobar.
     fi
   fi
  fi	

return	
}

post_setup(){		
	
  NEWPVERSION="`grep '^DISTRO_VERSION' /etc/DISTRO_SPECS | cut -f 2 -d '=' | cut -f 2 -d '"' | cut -f 2 -d "'" | cut -f 1 -d ' '`" #110422
  #w001 generate /etc/networkmodules...
  echo "Generating /etc/networkmodules ..."
  echo -n " network-drivers-list" >/dev/console
  /usr/sbin/updatenetmoduleslist.sh
  
  #110119 just in case something missing (like svg loader)...
  
  if [ $GDK_CACHE -ne $(cat /var/filecount/gdk_cache) ]; then
   echo "Generating /etc/gtk-2.0/gdk-pixbuf.loaders ..."
   echo -n " pixbuf-loaders" >/dev/console
   gdk-pixbuf-query-loaders > /etc/gtk-2.0/gdk-pixbuf.loaders
  fi
  
  #110622 note, mageia1 requires above file to be at /usr/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache -- symlink created by 3builddistro.
  #w003 update icon cache (supposed to speed things up)...
  
  if [ "$HLESS" == "" ]; then
   if [ $GTK_ICONS -ne $(cat /var/filecount/gtk_icons) ]; then
    echo "Updating gtk-icon-cache ..."
    echo "Execute: /usr/bin/gtk-update-icon-cache -f /usr/share/icons/hicolor/"
    echo -n " gtk-icon-cache" >/dev/console
    #note, can use  --ignore-theme-index if want to...
    /usr/bin/gtk-update-icon-cache -f /usr/share/icons/hicolor/
   fi
  fi
  
  return	
}

count_cache

case $PUPMODE in
 "7") #tmpfs (pup_rw), hd for persistent storage (pup_ro1), ${DISTRO_PUPPYSFS} (pup_ro2).
  NEWFILESMNTPT="/initrd/pup_ro2"
  OLDFILESMNTPT="/initrd/pup_ro1"
 ;;
 "6") #no tmpfs, PDEV1 (pup_rw), ${DISTRO_PUPPYSFS} (pup_ro2) 
  #have booted from PDEV1 partition, which has initrd.gz & ${DISTRO_PUPPYSFS} files on it, and
  #session has been saved direct to the partition. (very similar to mode 12)
  NEWFILESMNTPT="/initrd/pup_ro2"
  OLDFILESMNTPT="/initrd/pup_rw"
 ;;
 "12") #no tmpfs, ${DISTRO_FILE_PREFIX}save.3fs (pup_rw), nothing (pup_ro1), ${DISTRO_PUPPYSFS} (pup_ro2)
  #example: boot from live-cd, ${DISTRO_FILE_PREFIX}save.3fs on a fast h.d. partition.
  NEWFILESMNTPT="/initrd/pup_ro2"
  OLDFILESMNTPT="/initrd/pup_rw"
 ;;
 "13") #tmpfs (pup_rw), ${DISTRO_FILE_PREFIX}save.3fs (pup_ro1), ${DISTRO_PUPPYSFS} (pup_ro2).
  #example: boot from usb flash, ${DISTRO_FILE_PREFIX}save.3fs on flash media (needs restrained writes).
  NEWFILESMNTPT="/initrd/pup_ro2"
  OLDFILESMNTPT="/initrd/pup_ro1"
 ;;
 "77") #tmpfs (pup_rw), folders (pup_ro1), ${DISTRO_PUPPYSFS} (pup_ro2).
  #example: boot from multisession live-cd/dvd, pup_ro1 is a tmpfs folders copied from cd.
  NEWFILESMNTPT="/initrd/pup_ro2"
  OLDFILESMNTPT="/initrd/pup_ro1"
 ;;
 "option2hdinstall")
  NEWFILESMNTPT="/srcmntpt"
  OLDFILESMNTPT=""
 ;;
 5) #v423
  #PUPMODE=5 is first boot, ignore.
  
  cross_build_func
  
  post_setup 

  update_cache_info
  
  exit ###EXIT###
 ;;
 *) #v423 PUPMODE=2 (full hd install) then just exit.
  #exit
  #120505 need to consider situation of a full-hd install that is not pre-setup, as would normally be done by 3builddistro in Woof and the Universal Installer.
  #one exception is a cross-build in Woof. in such a situation /etc/networkmodules would not exist...
  if [ -f /etc/networkmodules ]; then
   update_cache_info
   exit ###EXIT###
  fi
  #code as per PUPMODE==5 above...
  
  cross_build_func
  
  post_setup 
  
  update_cache_info
  
  
 ;;
esac

. $NEWFILESMNTPT/etc/DISTRO_SPECS #w020 has DISTRO_VERSION, DISTRO_BINARY_COMPAT, DISTRO_FILE_PREFIX

NEWPVERSION="`grep '^DISTRO_VERSION' $NEWFILESMNTPT/etc/DISTRO_SPECS | cut -f 2 -d '=' | cut -f 2 -d '"' | cut -f 2 -d "'" | cut -f 1 -d ' '`" #110422
#note, reboot after creating save file, this might not be there...
# (but does get created, see bottom of this script)

if [ -f $OLDFILESMNTPT/etc/puppyversion ];then
 OLDPVERSION="`cat $OLDFILESMNTPT/etc/puppyversion`" #110422
 rm -f $OLDFILESMNTPT/etc/puppyversion #init does this, but not in case of full hd install.
fi

[ -f $OLDFILESMNTPT/etc/DISTRO_SPECS ] && OLDPVERSION="`grep '^DISTRO_VERSION' $OLDFILESMNTPT/etc/DISTRO_SPECS | cut -f 2 -d '=' | cut -f 2 -d '"' | cut -f 2 -d "'" | cut -f 1 -d ' '`" #110422
[ "$OLDPVERSION" = "" ] && OLDPVERSION="$NEWPVERSION" #110422

if [ "$OLDPVERSION" = "0" ];then #101228 01micko: workaround for weird bug, full hd install.
 #OLDPVERSION=`expr $NEWPVERSION - 1`
 OLDPVERSION='0.0' #110422
fi

#if [ $NEWPVERSION -gt $OLDPVERSION ];then
FLAGnew='false' #110422
#if vercmp $NEWPVERSION gt $OLDPVERSION ; then #

if [ -f /initrd/tmp/version_update_flag ]; then
 rm -f /initrd/tmp/version_update_flag 2>/dev/null
 FLAGnew='true' #110422
 VERstr='to version'
 [ "$OLDPVERSION" != "0.0" ] && VERstr="from version $OLDPVERSION to" #110422
 echo "Upgrading ${DISTRO_NAME} ${VERstr} ${NEWPVERSION}..." #110422
 echo -n " to $NEWPVERSION" >/dev/console

 #need to identify files that absolutely must always be updated, when
 #there is a new version, and forcefully copy them...
 
 if [ -d /root/.packages ]; then
  echo "Updating w.m. menus..."
  cp -af $NEWFILESMNTPT/root/.packages/Packages-* /root/.packages/ #w012
  cp -af $NEWFILESMNTPT/root/.packages/DISTRO_PKGS_SPECS /root/.packages/ #w012

  #110119...
  echo "Processing package data..."
  rm -rf /root/.packages/builtin_files
  cp -af $NEWFILESMNTPT/root/.packages/builtin_files /root/.packages/
  cp -af $NEWFILESMNTPT/root/.packages/woof-installed-packages /root/.packages/
  PKG_REPOS_ENABLED="`grep '^PKG_REPOS_ENABLED' /root/.packages/PKGS_MANAGEMENT | cut -f 2 -d "'"`" #geany'
  grep -v '^PKG_REPOS_ENABLED' $NEWFILESMNTPT/root/.packages/PKGS_MANAGEMENT > /tmp/PKGS_MANAGEMENT-tmp
  mv -f /tmp/PKGS_MANAGEMENT-tmp /root/.packages/PKGS_MANAGEMENT
  echo "PKG_REPOS_ENABLED='${PKG_REPOS_ENABLED}'" >> /root/.packages/PKGS_MANAGEMENT
  
 fi
 
  cp -af /root/.fvwm95rc /root/DOTfvwm95rc.bak 2>/dev/null
  cp -af /root/.jwmrc /root/DOTjwmrc.bak 2>/dev/null
 
 

 [ -f /etc/puppyversion ] && rm -f /etc/puppyversion #about time got rid of this.

 cp -af $NEWFILESMNTPT/etc/DISTRO_SPECS /etc/ #w012

 # Update if needed 
 
 if [ -f $OLDFILESMNTPT/etc/xdg/templates/_root_.jwmrc -a \
 "`grep JWMRC_VERSION_003 $OLDFILESMNTPT/etc/xdg/templates/_root_.jwmrc`" = "" ]; then
  cp -af $NEWFILESMNTPT/etc/xdg/templates/_root_.jwmrc /etc/xdg/templates/
  [ -f /usr/sbin/upgrade_ptheme_fix ] && upgrade_ptheme_fix
 fi
 
 cp -af /root/.icewm/menu /root/DOTicewmmenu.bak 2>/dev/null #v1.0.5
 cp -af $NEWFILESMNTPT/root/.fvwm95rc /root/ 2>/dev/null
 cp -af $NEWFILESMNTPT/root/.jwmrc /root/ 2>/dev/null 
 cp -af $NEWFILESMNTPT/root/.icewm/menu /root/.icewm/ 2>/dev/null #v1.0.5
 #also update every boot and shutdown script...
 
 echo "Updating boot and shutdown system scripts..."
 cp -af $NEWFILESMNTPT/etc/rc.d/rc.country /etc/rc.d/
 cp -af $NEWFILESMNTPT/etc/rc.d/rc.network /etc/rc.d/
 cp -af $NEWFILESMNTPT/etc/rc.d/rc.shutdown /etc/rc.d/
 cp -af $NEWFILESMNTPT/etc/rc.d/rc.sysinit /etc/rc.d/
 cp -af $NEWFILESMNTPT/etc/rc.d/rc.update /etc/rc.d/
 
 #110119...
 cp -af $NEWFILESMNTPT/etc/rc.d/rc.services /etc/rc.d/
 cp -af $NEWFILESMNTPT/etc/rc.d/functions4puppy /etc/rc.d/
 cp -af $NEWFILESMNTPT/etc/rc.d/functions4puppy4 /etc/rc.d/
 SKIPLIST="`grep '^SKIPLIST' /etc/rc.d/MODULESCONFIG | cut -f 2 -d '"'`" #geany'
 ADDLIST="`grep '^ADDLIST' /etc/rc.d/MODULESCONFIG | cut -f 2 -d "'"`" #geany'
 REGEX1="s%^SKIPLIST.*%SKIPLIST=\"${SKIPLIST}\"%"
 REGEX2="s%^ADDLIST.*%ADDLIST='${ADDLIST}'%"
 cp -af $NEWFILESMNTPT/etc/rc.d/MODULESCONFIG /etc/rc.d/
 sed -i -e "${REGEX1}" -e "${REGEX2}" /etc/rc.d/MODULESCONFIG
 
 #110204 problem, as overwrites LANG setting...
 #cp -af $NEWFILESMNTPT/etc/profile /etc/
 xLANG="`grep '^LANG=' /etc/profile | cut -f 2 -d '=' | cut -f 1 -d ' '`"
 #110216 still not working. so, do this bad hack (see rc.shutdown)...
 [ -f /var/local/etc_profile_at_shutdown ] && xLANG="`grep '^LANG=' /var/local/etc_profile_at_shutdown | cut -f 2 -d '=' | cut -f 1 -d ' '`" #110216
 REGEX3="s%^LANG=.*%LANG=${xLANG}%"
 sed -e "$REGEX3" $NEWFILESMNTPT/etc/profile > /etc/profile
 
 #cp -af $NEWFILESMNTPT/usr/X11R7/bin/xwin /usr/X11R7/bin/
 cp -af $NEWFILESMNTPT/root/.xinitrc /root/
 
 #110122 make sure all woof scripts are updated... 110722 updated lists... 111009 update...
 echo "Making sure all woof scripts are updated..."
 
 for ONESCRIPT in df initrd_layer_test mount ps pupkill umount
 do
  if [ -e $NEWFILESMNTPT/bin/$ONESCRIPT ]; then
  cp -a -f --remove-destination $NEWFILESMNTPT/bin/$ONESCRIPT /bin/
  fi
 done
 
 for ONESCRIPT in clean_desk_icons dir2sfs dir2tgz initNEW poweroff probedisk probepart pup_event_backend_firmware pup_event_backend_modprobe pup_event_backend_modprobe_protect pup_event_frontend_d reboot runlevel test-eide test-scsi
 do
  if [ -e $NEWFILESMNTPT/sbin/$ONESCRIPT ]; then
  cp -a -f --remove-destination $NEWFILESMNTPT/sbin/$ONESCRIPT /sbin/ 2>/dev/null
  fi
 done
 
 for ONESCRIPT in dir2pet dirs2pets evince gtkdialog-splash lprshell man new2dir pet2tgz petspec pman pupdialog restartwm startx tgz2pet wmexit wmpoweroff wmreboot wvdialshell xterm xwin yaf-splash
 do
  if [ -e $NEWFILESMNTPT/usr/bin/$ONESCRIPT ]; then
  cp -a -f --remove-destination $NEWFILESMNTPT/usr/bin/$ONESCRIPT /usr/bin/ 2>/dev/null
  fi
 done
 
 for ONESCRIPT in alsaconf alsawizard askpass background_reshape bcrypt_gui bootflash bootmanager burniso2cd calcfreespace.sh cdburner-wizard chooselocale connectwizard connectwizard_2nd countrywizard cups_shell dotpup delayedrun deskshortcut.sh download_file eventmanager exploderpm filemnt fitimage2root fixdesk fixmenus fixPuppyPin floppy-format.sh framebufferwizard freememappletshell gen_modem_init_string get_bluetooth_connection get_modem_alternate_device grubconfig grubconfigREADME.txt icon_switcher icon_switcher_cli indexgen.sh input-wizard ipinfo loginmanager modemdisconnect modemprobe modemprobe_erase modemprobe_help modemtest networkdisconnect partview pcur pdict Pdisk petget pgprs-shell pmodemdiag pmonitork.sh pmonitorx.sh pmount pmovie pngoverlay pngoverlay.bac pngoverlay.sh pppconnect pppdisconnect pppsetup Pudd pup-advert-blocker pupautodetect pupcamera pupdial pupdial_init_hotpluggable pupdial_wizard_helper puppyhelp puppyinstaller puppypdf pupscan remasterpup2 remove_builtin report-video resizepfile.sh root2user save2flash save2image savesession-dvd scannerwizard.sh securetelnetshell set_bg set_hwclock_type set-time-for-puppy set-xftdpi sfsget shutdownconfig snapmergepuppy sns spacereplace systemvalues timezone-set updatenetmoduleslist.sh usb_modem_special_status usb_modeswitch_status video_upgrade_wizard video-wizard wakepup2 welcome1stboot welcome1stboot.bac wirelesswizard wizardwizard xdelta_gui xf86svga336wizard xgamma-gui xinitrc_test xorgwizard xorgwizard-automatic xrandrshell xserverwizard
 do
  if [ -e $NEWFILESMNTPT/usr/sbin/$ONESCRIPT ]; then
  cp -a -f --remove-destination $NEWFILESMNTPT/usr/sbin/$ONESCRIPT /usr/sbin/ 2>/dev/null
  fi
 done
 
 if [ -d $NEWFILESMNTPT/usr/local/petget ]; then
  cp -a -f --remove-destination $NEWFILESMNTPT/usr/local/petget /usr/local/
 fi
 
 if [ -d $NEWFILESMNTPT/usr/local/petget ]; then
  cp -a -f --remove-destination $NEWFILESMNTPT/usr/local/petget /usr/local/
 fi
 
 if [ -d $NEWFILESMNTPT/usr/local/video_upgrade ]; then
  cp -a -f --remove-destination $NEWFILESMNTPT/usr/local/video_upgrade /usr/local/
 fi
 
 #Remove old kernels if present
 
 echo "Removing old kernels if present..."
 
 for i in $(ls -d /lib/modules/[0-9]*)
 do
  OLDKERN=$(echo $i | cut -f 4 -d '/')
  if [ "$KERNVER" != "$OLDKERN" ]; then
   rm -rf $i
  fi
 done

 depmod_func #run depmod. 130217 extracted as a function.
  
 #alsaconf generates alsaconf.cards, maybe have to get rid of old one?... 110119
 [ -f /var/tmp/alsaconf.cards ] && rm -f /var/tmp/alsaconf.cards
 
 if [ -f /etc/modprobe.conf ];then #110119 deprecated.
  SNDCARD0="`grep '^alias snd\-card\-0' /etc/modprobe.conf`"
  SNDSLOT0="`grep '^alias sound\-slot\-0' /etc/modprobe.conf`"
  rm -f /etc/modprobe.conf
  [ "$SNDCARD0" ] && echo "$SNDCARD0" >> /etc/modprobe.d/alsa.conf
  [ "$SNDSLOT0" ] && echo "$SNDSLOT0" >> /etc/modprobe.d/alsa.conf
 fi

 #v2.14 Jesse suggested this. remove any broken shared library symlinks...
 echo "Removing any broken shared library symlinks..."
 find / -mount -noleaf -path '*/lib/*' -type l -name *.so -o -noleaf -path '*/lib/*' -type l -name *.so.* |
 while read ONESYMLINK
 do
  ONESYMDEST="`readlink $ONESYMLINK`"
  ONESYMDIR="`dirname $ONESYMLINK`"
  FIRSTCHAR="`echo -n "$ONESYMDEST" | cut -b 1`"
  if [ "$FIRSTCHAR" = "/" ];then
   [ ! -e "$ONESYMDEST" ] && rm -f $ONESYMLINK
  else
   [ ! -e $ONESYMDIR/$ONESYMDEST ] && rm -f $ONESYMLINK
  fi
 done

 #111009 try fix upgrading old wary save-file...
 
 echo "Trying fix upgrading old wary save-file..."
 
 if [ "$PUPMODE" != "option2hdinstall" ];then
  case $DISTRO_FILE_PREFIX in
   wary)
     if vercmp $OLDPVERSION lt 5.1.5;then #before i recompiled everything in t2.
     #x might not work, wipe all stuff in save-file...
     rm -rf $OLDFILESMNTPT/usr/X11R7/* #hmmm, will this show on top?
     rm -f /etc/X11/xorg.conf
     #111026 upnorth posted this.. (http://murga-linux.com/puppy/viewtopic.php?t=72258&start=90)
     rm /etc/gtk-2.0/gdk-pixbuf.loaders
     gdk-pixbuf-query-loaders >/etc/gtk-2.0/gdk-pixbuf.loaders
    fi
   ;;
  esac
 fi

 #w001 generate /etc/networkmodules...
 echo "Generating /etc/networkmodules ..."
 echo -n " network-drivers-list" >/dev/console
 /usr/sbin/updatenetmoduleslist.sh
 
 if [ $GTK_ICONS -ne $(cat /var/filecount/gtk_icons) ]; then
  #w003 update icon cache (supposed to speed things up)...
  echo "Updating icon cache (supposed to speed things up)..."
  echo -n " gtk-icon-cache" >/dev/console
  /usr/bin/gtk-update-icon-cache -f /usr/share/icons/hicolor/ &
 fi

 if [ $GDK_CACHE -ne $(cat /var/filecount/gdk_cache) ]; then
  #110119 just in case something missing (like svg loader)...
  echo "Rebuilding /etc/gtk-2.0/gdk-pixbuf.loaders ..."
  echo -n " pixbuf-loaders" >/dev/console
  gdk-pixbuf-query-loaders > /etc/gtk-2.0/gdk-pixbuf.loaders
 fi
 
 #110622 note, mageia1 requires above file to be at /usr/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache -- symlink created by 3builddistro.

 #111027 sometimes these go back to 755... 01micko reports this problem with full install
 
 echo "Fixing permissions on /tmp..."
 chmod 777 /tmp
 echo "Fixing permissions on /var..."
 chmod 777 /var

 #moved this stuff down from line 166. fixmenus must run after desktop icons setup...
 #master help index has to be updated...
 echo "Updating master help index..."
 /usr/sbin/indexgen.sh &
 #120209 i think these also need to run, in case a target file has changed and needs to be re-translated...
 #but, i think the english target files will have to be copied to top first...
 
 echo "Performing retranslation..."
 
 SSSDESK="`grep '^\[' $NEWFILESMNTPT/usr/share/sss/desk_strings/desk_strings | tr -d '[' | tr -d ']' | tr '\n' ' '`"
 SSSSCRIPTS="`grep '^\[' $NEWFILESMNTPT/usr/share/sss/script_strings/script_strings | tr -d '[' | tr -d ']' | tr '\n' ' '`"
 for ASECTIONID in ${SSSDESK} ${SSSSCRIPTS} #ex: general _woof_.jwmrc
 do
  #allow any character to be the 'marker' for / in the section-id...
  MARKERCHAR="`echo -n "$ASECTIONID" | cut -c 1`"
  TARGETFILE="`echo -n "$ASECTIONID" | tr "${MARKERCHAR}" '/'`" #ex: /root/Choices/ROX-Filer/PuppyPin
  if [ -f ${NEWFILESMNTPT}${TARGETFILE} ];then #precaution.
   TARGETPATH="`dirname $TARGETFILE`"
   cp -a -f ${NEWFILESMNTPT}${TARGETFILE} ${TARGETPATH}/
  fi
  [ -f /var/local/sss${TARGETFILE} ] && rm -f /var/local/sss${TARGETFILE} #remove previous en backup (see fixdesk)
 done
 LANG=$xLANG /usr/sbin/fixscripts
 LANG=$xLANG /usr/sbin/fixdesk
 #Reconstruct configuration files for JWM, Fvwm95, IceWM... 120209 append LANG...
 LANG=$xLANG /usr/sbin/fixmenus

fi
xLANG="`grep '^LANG=' /etc/profile | cut -f 2 -d '=' | cut -f 1 -d ' '`"


#stuff to update on every boot...

#think have to do this everytime...
cp -af $NEWFILESMNTPT/etc/DISTRO_SPECS /etc/
touch /etc/DISTRO_SPECS #important, as snapmergepuppy uses '-u' cp option. ...huh, why?

#v2.16 if aufs layers have changed, may need to fix menu (etc)...
#note, BootManager may be popped-up, see /usr/sbin/delayedrun.
if [ -d /initrd ];then #test it isn't full hd installation.

 . /etc/rc.d/BOOTCONFIG
 
 #v2.16.1 bug with multisession-cd, different folder at each startup, so screen out...
 
 echo "Checking unionfs timestamp..."
 xLASTUNIONRECORD="`echo -n "$LASTUNIONRECORD" | sed -e 's/^20[0-9][0-9][-0123456789]* //'`"
 xPREVUNIONRECORD="`echo -n "$PREVUNIONRECORD" | sed -e 's/^20[0-9][0-9][-0123456789]* //'`"

 if [ "$xLASTUNIONRECORD" != "$xPREVUNIONRECORD" ];then
  echo -en " layered-filesystem \\033[1;35mnext boot will be faster!\\033[0;39m" > /dev/console
  echo "Aufs layers have changed since previous boot, fixing menu..."
  #master help index has to be updated...
  echo "Updating master help index..."
  /usr/sbin/indexgen.sh
  #Reconstruct configuration files for JWM, Fvwm95, IceWM...
  echo "Fixing menu entries..."
  LANG=$xLANG /usr/sbin/fixmenus
  
  if [ $FONTS -ne $(cat /var/filecount/font_count) ]; then
   echo "Rebuilding fontconfig cache..."
   fc-cache -f #120323 shinobar: some sfs files may have fonts
  fi
  
  if [ $GTKIM_CACHE -ne $(cat /var/filecount/gtkim_cache) ]; then
   echo "Querying gtk modules..."
   which gtk-query-immodules-2.0 &>/dev/null && gtk-query-immodules-2.0 > /etc/gtk-2.0/gtk.immodules #120323 shinobar: refresh gtk.immodules
  fi
  
  if [ "$KMODULES" == "" ]; then
   KMODULES=0
  fi
  
  if [ "$PREVKMODULES" == "" ]; then
   PREVKMODULES=0
  fi
    
  if [ $KMODULES -ne $PREVKMODULES ]; then
   echo "External kernel modules found. performing depmod..."
   depmod_func #120323 shinobar: and some sfs may have kernel modules. 130217 depmod extracted as a function.
  fi
  
  #w007 has a 'zdrv' layer been added or removed?...
  EXMOD_CNT=0
  zzPATTERN='zdrv' #120323 have settled on this in all zdrv sfs filenames.
  EXMOD_SFS1="`echo "$xLASTUNIONRECORD" | tr ' ' '\n' | grep "$zzPATTERN"`"
  EXMOD_SFS2="`echo "$xPREVUNIONRECORD" | tr ' ' '\n' | grep "$zzPATTERN"`"
  [ "$EXMOD_SFS1" != "" ] && EXMOD_CNT=1
  [ "$EXMOD_SFS2" != "" ] && EXMOD_CNT=`expr $EXMOD_CNT + 1`
  
  if [ $EXMOD_CNT -eq 2 ];then
   [ "$EXMOD_SFS1" != "$EXMOD_SFS2" ] && EXMOD_CNT=1 #may have changed to a different zdrv sfs.
  fi
  
  if [ $EXMOD_CNT -eq 1 ];then
   #depmod #120323 removed, already done above.
   echo "Execute: /usr/sbin/updatenetmoduleslist.sh"
   /usr/sbin/updatenetmoduleslist.sh
  fi
 fi
  
fi

update_cache_info

###END###
