#!/bin/sh
#pupcamera rewritten by mistfire. Interface and behavior based from pmount for Puppy 4.0

if [ "$(whoami)" != "root" ]; then
exec sudo -A ${0} ${@}
exit
fi


add_remote()
{
IP_Add=`Xdialog --title "New Remote Connection" --stdout --inputbox "Enter IP address of the remote camera" 300x100`

if [ "$IP_Add" == "" ]; then
exit
fi

/usr/lib/gtkdialog/box_splash -close never -text "Checking remote camera $IP_Add..." &
xPID=$!

ping -q -c5 $IP_Add
retvalp=$?

kill $xPID

if [ $retvalp -ne 0 ]; then
/usr/lib/gtkdialog/box_ok "PupCamera" error "Remote camera $IP_Add is not reachable"
exit
fi

port_no=`Xdialog --title "New Remote Connection" --stdout --inputbox "Enter port number of the remote camera (optional)" 350x100`

if [ "$port_no" == "" ]; then
port1=""
ippath="$IP_Add"
else
port1=":$port_no"
ippath="$IP_Add-$port_no"
fi

if [ ! -d /media/remote-cam-$ippath ]; then
mkdir /media/remote-cam-$ippath
fi

gphotofs --port="ptpip:$IP_Add$port1" /media/remote-cam-$ippath

retval=$?

if [ $retval -eq 0 ]; then
/usr/lib/gtkdialog/box_ok "PupCamera" info "Remote camera connected"
else
rmdir /media/remote-cam-$IP_Add
/usr/lib/gtkdialog/box_ok "PupCamera" error "Cannot connect to remote camera"
fi

}

export -f add_remote

#using ${$} which is pid of script...
MYPID=${$}

. /etc/rc.d/PUPSTATE #v3.96
PMOUNT="pmount" #name of this executable.
MINIFOLDERXPM='/usr/local/lib/X11/mini-icons/mini-filemgr.xpm'

ALLPS="`ps`"
OLDPIDS="`echo "$ALLPS" | grep 'gtkdialog' | grep 'PCAMGUI' | tr -s ' ' | sed -e 's%^ %%' | cut -f 1 -d ' ' | tr '\n' ' '`"
kill $OLDPIDS 2>/dev/null

/usr/lib/gtkdialog/box_splash -close never -text "Probing cameras..." &
xPID=$!
sleep 3s
kill $xPID

if [ "`which gphoto2`" ];then
gphoto2 --auto-detect | tr -s ' ' | tail -n +3 > /tmp/pcamera_ports
else
/usr/lib/gtkdialog/box_ok "PupCamera" error "<b>$(gettext "The 'gphoto' application is not installed.")</b>" "$(gettext "That means PupCamera cannot access the photos on a digital camera. Please run the Puppy Package Manager (see 'install' icon on desktop) to install 'gphotofs' and it's dependencies.")"
exit
fi

content=`cat /tmp/pcamera_ports`

cp /tmp/pcamera_ports /tmp/pcamera_port_name

sed -i -e "s/ /|/g" /tmp/pcamera_ports

CAMCNT=1

for d1 in `cat /tmp/pcamera_ports | sort`;
do

portcam=`echo "$d1" | rev | cut -f 2 -d "|" | rev`

DEVNAME=`cat /tmp/pcamera_port_name | grep "$portcam"`
 
ONEMNTPT=`mount | grep /media/camera${CAMCNT}`
 
 if [ "$ONEMNTPT" = "" ];then #not mounted.
  PARTSGUI="${PARTSGUI}<hbox><text><label>${DEVNAME} (Cam ${CAMCNT})</label></text><button><label>MOUNT</label><action>mkdir /media/camera${CAMCNT}</action><action>gphotofs --port='$portcam' /media/camera${CAMCNT}</action><action>EXIT:refresh</action></button><button><input file>${MINIFOLDERXPM}</input><label>OPEN</label><action>rox -d /media/camera${CAMCNT}&</action><sensitive>false</sensitive></button></hbox>"
 else
  #<input file>${DRIVEXPM}</input>
  PARTSGUI="${PARTSGUI}<hbox><text><label>${DEVNAME} (Cam ${CAMCNT})</label></text><button><label>UNMNT</label><action>umount /media/camera${CAMCNT}</action><action>rmdir /media/camera${CAMCNT}</action><action>EXIT:refresh</action></button><button><input file>${MINIFOLDERXPM}</input><label>OPEN</label><action>rox -d /media/camera${CAMCNT}&</action><sensitive>true</sensitive></button></hbox>"
 fi

CAMCNT=`echo $(expr $CAMCNT + 1)`

done


RMT=1


for g1 in `mount | grep /media/remote-cam- | cut -f 3 -d " "`
do

ipaddress=`echo "$g1" | cut -f 3 -d "-"`
rport=`echo "$g1" | cut -f 4 -d "-"`
ippath=`basename $g1`

if [ "$rport" != "" ]; then
label1="$ipaddress port $rport (Remote $RMT)"
else
label1="$ipaddress (Remote $RMT)"
fi

if [ "$g1" != "" ]; then
PARTSGUI="${PARTSGUI}<hbox><text><label>$label1</label></text><button><label>UNMNT</label><action>umount /media/$ippath</action><action>rmdir /media/$ippath</action><action>EXIT:refresh</action></button><button><input file>${MINIFOLDERXPM}</input><label>OPEN</label><action>rox -d /media/$ippath&</action><sensitive>true</sensitive></button></hbox>"
fi

RMT=`echo $(expr $RMT + 1)`

done


if [ "$PARTSGUI" == "" ]; then
PARTSGUI="<text><label>NO CAMERAS DETECTED</label></text>"
fi


export PCAMGUI="
<window title=\"PupCamera - '$(gettext 'Access digital camera')'\" icon-name=\"gtk-orientation-landscape\" resizable=\"false\">
 <vbox height-request=\"300\" width-request=\"500\">
  <vbox>
  `/usr/lib/gtkdialog/xml_info fixed photocamera_yes.svg 40 \"<b>DO NOT REMOVE MOUNTED MEDIA</b>\" \"$(gettext 'You may have to close your file manager to close the camera correctly')\"`
  </vbox>
  <frame Detected cameras>
  <vbox scrollable=\"true\" space-expand=\"true\">
  ${PARTSGUI}
  </vbox>
  </frame>
  <hbox>
   <button><input file stock=\"gtk-add\"></input><label>REMOTE</label>
    <action>add_remote</action>
    <action type=\"exit\">refresh</action>
   </button>
   <button><input file stock=\"gtk-refresh\"></input><label>REFRESH</label>
    <action type=\"exit\">refresh</action>
   </button>
   <button><input file stock=\"gtk-quit\"></input><label>QUIT</label></button>
  </hbox>
 </vbox>
</window>"


RETPARAMS="`gtkdialog3 --program=PCAMGUI --center`"

rm -f /tmp/pcamera_ports
rm -f /tmp/pcamera_port_name 

#echo "$RETPARAMS"

result=`echo $RETPARAMS | grep "refresh"`

if [ "$result" != "" ]; then
$0
fi


###END###
