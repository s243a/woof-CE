# ubuntu/debian puppy basesfs pkglist
#
# generic commands: %exit %include %makesfs %import
# special package commands: %get_pkgs_by_priority %addbase %addpkg %bblinks %remove %repo %lock %cutdown
# installer commands: %bootstrap %dpkg %dpkgchroot %depend %nodepend %reinstall %dpkg_configure
# startup default: bootstrap, nodepend
#
# extra param for commands, params can be quoted
# %include        include-file
# %makesfs        output.sfs [squashfs-param]
# %pkg_by_prio    priority ["inclusion-egrep"] ["exclusion-egrep"]
# %bblinks        [nousr]
# %remove         pkgname ...
# %repo           url version sections pkgdb
# %addpkg         pkgname ...
# %reinstall      pkgname ...
# %dpkg_configure configure flags
# %lock           pkgname ...
# %cutdown        [all doc gtkdoc nls cache dev]
# %import         dir ...
#
# %symlink        source target
# %rm             file ... (-rf flag is always used)
# %mkdir          dir ... (-p flag is always used)
# %touch          file ...
# % %chroot         command ...
#
# start with %pkgs_by_prio required. Otherwise start with libc6.
#

# essential packages
#%pkgs_by_priority "required" ".*lib.*|^tzdata|^bash|^dash|^lsb-base|^ncurses.*|^bsdutils|^kmod|^mount|^insserv|^mount|^sysvinit-utils|^procps|^makedev" "^klibc|.*plymouth.*|mountall"
#%pkgs_by_priority "required" ".*lib.*|^tzdata|^bash|^dash|^lsb-base|^ncurses.*|^bsdutils|^kmod|^mount|^insserv|^sysvinit-utils|^makedev" "^klibc|.*plymouth.*"
#%pkgs_by_priority "required"

%bootstrap
%nodepend 
%dummy libc6 #Tinycore has it's own c libraries. Maybe add symbolic links. 
libtinfo5
#multiarch-support #Dependency of libpcre3
libpcre3    #Dependency of libselinux1
libselinux1
debianutils 
gettext
%dummy base-files #Tinycore probably already has these
%dummy zlib1g #Already linked to busybox
tar
liblzma5
libbz2-1.0
libattr1
libacl1
%addpkg tinycore9_base_gz
#%addpkg tinycore9_base_gz_users
%addpkg puppycore_noarch
%addpkg puppycore_users
dpkg
%dpkgchroot 
dash
bash
coreutils
dialog
strace #add this for debugging purposes
#Let's reconfigure stuff before running post install scripts
%dpkg_configure --force-all -a
%addpkg puppycore_noarch
%addpkg puppycore_users
%addpkg puppycore_i386_strech
#%addpkg PKG #Uncomment this later once we add support for pkg
%add pkg-apt-wrapper 
#At this point we coudl run pkg insead of dpkg but we havn't added support for this yet. 
         # turn on dependency
grep
libsigsegv2 #required for gawk 
gawk
%dummy mawk
sed
tar
%dummy gzip
%dummy cpio
%dummy libpam0g
%dummy libpam-modules-bin
%dummy libpam-modules
libaudit1 #required for passwd
libcap-ng0 #Required for passwd
# extra packages
%dummy screen       # useful for debugging
%dummy file         # for checking file types
%dummy locales      # locale files
%depend

perl-base #Required for debconf
debconf #Required for openssl
openssl #Required for ca-certificates
ca-certificates #Recommended for wget
libidn2-0  #Required for libpsl5
libunistring0 #Required for libpsl5
libpsl5 #Required for wget
wget

nano
# xorg packages

%dummy libkmod2           # debian needs this

#rxvt-unicode using aterm instead
aterm           #Same name in tinycore
urxvt  #required for aterm
       #I'll sort out the dependency of this one later.
libfltk1.3      #Instead of fltk-1.3 (from tinycore)
flwm            #Instead of flwm_topside (from tinycore) 

libimlib2       #Instead of imlib2-bin & imlib2  (from tinycore) 


####### Maybe keep this since we dont' have matches for Xlibs, Xprogs, Xvesa but turn off dependency tracking 

%dummy libwayland-client0 #Dependency for libegl1-mesa, libgbm1
%dummy libwayland-server0 #Dependency for libegl1-mesa, libgbm1
%dummy libxcb-dri2-0   #Dependency for libegl1-mesa, libgl1-mesa-glx
%dummy libxcb-dri3-0   #Dependency for libegl1-mesa, libgl1-mesa-glx
%dummy libxcb-present0 #Dependency for libegl1-mesa, libgl1-mesa-glx
%dummy libxcb-sync1    #Dependency for libegl1-mesa
%dummy libxcb-xfixes0  #Dependency for libegl1-mesa
%dummy adduser        #Dependency for dbus, xserver-xorg-core
%dummy libxcb-glx0     #Required for libgl1-mesa-glx
%dummy xserver-xorg-core-udeb #Dependency of xorg-input-abi-24
%dummy xorg-input-abi-24 #Virtual package: dependency of: xserver-xorg-input-libinput
#Can use xorg-driver-input instead of xserver-xorg-input-all, which is a virtual package
                #that lists the indvidual XOrg input drives as dependencies
%dummy init-system-helpers  #Dependency for dbus (systemd stuff)
%dummy libapparmor1   #Dependency for dbus
%dummy libaudit1      #Dependency for dbus
%dummy libcap-ng0     #Dependency for dbus
%dummy libselinux1    #Dependency for dbus
%dummy libsystemd0    #Dependency for dbus, libdbus-1-3
 
%dummy gcc-6-base     #Dependency for libgcc1: readme, licencing, todo, cangelog
                #We mightneed to add this
%dummy libgcc1        #Dependency for libexpat1
dbus            #Recommended dependency for libdbus-1-3

%dumy xserver-xorg-video-all #Let's pick the specific drivers that we want
xserver-xorg-video-vesa 
xserver-xorg-video-vmware #This also works in virtualbox and qemu
xserver-xorg
#TODO Create a base sfs layere here. Add other packages as a higher up layer

libxcb-shm0
%dummy libx11-data       #Dependency of libx11-6 (inernationalization)
%dummy libxft2        #Dependency of x11-utils
%dummy libxxf86dga1   #Dependency of x11-utils
%dummy libxv1         #Dependency of x11-utils
%dummy libxtst6       #Dependency of x11-utils
%dummy libxmuu1       #Dependency of x11-utils
%dummy libxcb-shape0  #Dependency of x11-utils
x11-utils
#%dummy libxxf86vm1    #Dependency of x11-xserver-utils
x11-xserver-utils
############################# Consider installing xinit ##############
#TODO consider adding tinycore and create a layer here
#xinit          #we can start Xorg without xinit
######################### Not sure about this stuff ######
fonts-dejavu-core  # standard font

libxfont1       #Instead of libXfont (From tinycore) 
wbar            #Same name on tinycore

#######

# window managers etc
jwm 
%dpkg_configure --force-all -a
%addpkg jwm_config

#rox
#%addpkg pthemes
#%addpkg rox-filer-data
#%rox_config

mc #Replaces rox-filer          # this will pull-in gtk2

%bootstrap

# network tools to make SNS happy
ifplugd
dhcpcd5
wireless-tools
wpasupplicant

# fixes for apt-get: re-install perl-base and xserver-xorg-core with dpkg
%dpkgchroot
%reinstall perl-base xserver-xorg-core 
%bootstrap         # switch back to bootstrap installer - faster

xdialog             #note: only i386 arch available
gtkdialog           #note: only i386 arch available

# final steps
# remove extremely toxic packages, then setup the dummy
%remove initscripts ifupdown sysv-rc upstart mountall 
%dummy  initscripts ifupdown sysv-rc upstart mountall

# these useless packages got pulled by apt-get -f install, so prevent it from getting installed
%remove plymouth libplymouth2 plymouth-theme-ubuntu-text
%dummy  plymouth libplymouth2 plymouth-theme-ubuntu-text
%remove busybox-initramfs initramfs-tools-bin klibc-utils initramfs-tools
%dummy  busybox-initramfs initramfs-tools-bin klibc-utils initramfs-tools
%dummy  adduser base-files

## install busybox and its symlinks, fallback for missing utilities
#busybox-static
#%bblinks

# install puppy-base - MUST BE LAST - unless overriding puppy-base
#%mkdir /dev
pmount

%addpkg --forced tinycore9_base_gz
%addpkg --forced puppycore_noarch

#%addpkg --forced tinycore9_base_gz_users #Can use instead of puppycore_users
%addpkg --forced puppycore_users

%addpkg --forced puppycore_i386_strech

#Can use tinycore9_base_gz_startup instead of puppycore: _sysinit _sysinit_net _Xstartup
#%addpkg tinycore9_base_gz_startup 

%addpkg --forced puppycore_sysinit
%addpkg --forced puppycore_sysinit_net
%addpkg --forced puppycore_Xstartup

%addpkg --forced debian-setup # specific debian setup, overriding puppy-base

#Dependencies for pkg (maybe create wrappers for these instead of installing them)
%reinstall findutils #Dependency of PKG
%reinstall sed       #Dependency of PKG
%reinstall grep      #Dependency of PKG
%reinstall wget      #required for pkg

%dpkg_configure --force-all -a


## install extra built-in packages

# apps
# mtpaint

%addpkg sync_pet_specs_fm_dpkg
%chroot sync_pet_specs_fm_dpkg.sh
%addpkg puppy_ppm_configs_devaun_ascii
%addpkg PKG
%chroot pkg --repo-update  #Update the packge repos


%lock puppy-base puppy-base-arch libc6 # example: never update puppy base and libc6
#%addpkg james-staging # temporary area to changes before they get merged to rootfs

# cutdown the size
%cutdown doc gtkdoc nls # lets see if nls cutdown works now

#%rm /dev #s243a: Do we want to remove /dev?
# make the sfs (optional)
%makesfs iso/iso-root/puppy.sfs -comp gzip # -Xcompression-level 1
